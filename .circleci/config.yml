version: 2.1
aliases:
  - &docker_environment
    - image: cirrusci/flutter:latest
  - &restore_cache
    keys:
      # when lock file changes, use increasingly general patterns to restore cache
      - pub-packages-v1-{{ checksum "packages/graphql/pubspec.lock" }}-{{ checksum "packages/graphql_flutter/pubspec.lock" }}
      - pub-packages-v1-{{ checksum "packages/graphql/pubspec.lock" }}
      - pub-packages-v1-
jobs:
  dependencies:
    docker: *docker_environment
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run:
          name: Install dependencies (graphql)
          command: |
            cd packages/graphql
            flutter packages get
      - run:
          name: Install dependencies (graphql_flutter)
          command: |
            cd packages/graphql_flutter
            flutter packages get
      - save_cache:
          key: pub-packages-v1-{{ checksum "packages/graphql/pubspec.lock" }}-{{ checksum "packages/graphql_flutter/pubspec.lock" }}
          paths:
            - ~/.pub-cache
  lint:
    docker: *docker_environment
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run:
          name: Code linting (graphql)
          command: |
            cd packages/graphql
            dartfmt **/*.dart -n --set-exit-if-changed
      - run:
          name: Code linting (graphql_flutter)
          command: |
            cd packages/graphql_flutter
            dartfmt **/*.dart -n --set-exit-if-changed
  coverage:
    docker: *docker_environment
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run:
          name: Code coverage (graphql)
          command: |
            cd packages/graphql
            flutter test --coverage
      - run:
          name: Code coverage (graphql_flutter)
          command: |
            cd packages/graphql_flutter
            flutter test --coverage
      - run:
          name: Upload coverage
          command: |
            bash <(curl -s https://codecov.io/bash)
  release:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - run:
          name: Generate release tags
          command: npx semantic-release@beta
  publish:
    docker: *docker_environment
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run:
          name: Install yq yaml tool
          command: |
            sudo add-apt-repository ppa:rmescandon/yq && \
            sudo apt update && \
            sudo apt install yq -y
      - run:
          name: Add git credentials
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "github-bot@zino-app.com"
            git config user.name "Zino App (Github bot)"
      - run:
          name: Add pub credentials
          command: |
            [[ ! -d ~/.pub-cache ]] && mkdir -p ~/.pub-cache

            cat \<<EOF > ~/.pub-cache/credentials.json
            {
              "accessToken": ${PUB_ACCESS_TOKEN},
              "refreshToken": ${PUB_REFRESH_TOKEN},
              "tokenEndpoint": "https://accounts.google.com/o/oauth2/token",
              "scopes": ["https://www.googleapis.com/auth/userinfo.email", "openid"],
              "expiration": ${PUB_EXPIRATION},
            }
            EOF
      - run:
          name: Patch pubspec with version (graphql)
          command: |
            cd packages/graphql

            cat \<<EOF > patch.yaml
            version: ${CIRCLE_TAG}
            EOF

            yq m pubspec.yaml patch.yaml
      - run:
          name: Patch pubspec with version (graphql_flutter)
          command: |
            cd packages/graphql_flutter

            cat \<<EOF > patch.yaml
            version: ${CIRCLE_TAG}
            dependencies:
              graphql: ^${CIRCLE_TAG}
            EOF

            yq m pubspec.yaml patch.yaml
      - run:
          name: Bump version numbers
          command: |
            git commit --allow-empty -m "build: Bump version numbers (via CircleCI) [skip ci]"
            # Push quietly to prevent showing the token in log
            git push -q https://${GH_TOKEN}@github.com/zino-app/graphql-flutter.git
      - run:
          name: Pub deployment (graphql)
          command: |
            cd packages/graphql
            pub publish -f
      - run:
          name: Pub deployment (graphql_flutter)
          command: |
            cd packages/graphql
            pub publish -f
workflows:
  default:
    jobs:
      - dependencies:
          filters:
            tags:
              only: /^.*$/
      - lint:
          requires:
            - dependencies
          filters:
            tags:
              only: /^.*$/
      - coverage:
          requires:
            - dependencies
          filters:
            tags:
              only: /^.*$/
      - release:
          requires:
            - dependencies
            - lint
            - coverage
          filters:
            branches:
              only:
                - master
                - beta
      - publish:
          requires:
            - dependencies
            - lint
            - coverage        
          filters:
            tags:
              only: /^.*$/
            branches:
              ignore: /.*/
